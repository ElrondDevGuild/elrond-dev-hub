CREATE TABLE IF NOT EXISTS public.categories
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    title text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    CONSTRAINT categories_pkey PRIMARY KEY (id)
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.categories
    OWNER to postgres;

ALTER TABLE IF EXISTS public.categories
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.categories TO anon;

GRANT ALL ON TABLE public.categories TO authenticated;

GRANT ALL ON TABLE public.categories TO postgres;

GRANT ALL ON TABLE public.categories TO service_role;


CREATE TABLE IF NOT EXISTS public.resources
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    title text COLLATE pg_catalog."default" NOT NULL,
    author character varying COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    curator_address text COLLATE pg_catalog."default",
    published_at timestamp with time zone,
    created_at timestamp with time zone DEFAULT now(),
    category_id bigint NOT NULL,
    CONSTRAINT resources_pkey PRIMARY KEY (id),
    CONSTRAINT resources_category_id_fkey FOREIGN KEY (category_id)
    REFERENCES public.categories (id) MATCH SIMPLE
                         ON UPDATE CASCADE
                         ON DELETE RESTRICT
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.resources
    OWNER to postgres;

ALTER TABLE IF EXISTS public.resources
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.resources TO anon;

GRANT ALL ON TABLE public.resources TO authenticated;

GRANT ALL ON TABLE public.resources TO postgres;

GRANT ALL ON TABLE public.resources TO service_role;




CREATE TABLE IF NOT EXISTS public.tags
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    title text COLLATE pg_catalog."default" NOT NULL,
    created_at timestamp with time zone DEFAULT now(),
    CONSTRAINT tags_pkey PRIMARY KEY (id)
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.tags
    OWNER to postgres;

ALTER TABLE IF EXISTS public.tags
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.tags TO anon;

GRANT ALL ON TABLE public.tags TO authenticated;

GRANT ALL ON TABLE public.tags TO postgres;

GRANT ALL ON TABLE public.tags TO service_role;

CREATE TABLE IF NOT EXISTS public.resource_tag
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    resource_id bigint NOT NULL,
    tag_id bigint NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    CONSTRAINT resource_tag_pkey PRIMARY KEY (id),
    CONSTRAINT resource_tag_resource_id_fkey FOREIGN KEY (resource_id)
    REFERENCES public.resources (id) MATCH SIMPLE
                         ON UPDATE CASCADE
                         ON DELETE CASCADE ,
    CONSTRAINT resource_tag_tag_id_fkey FOREIGN KEY (tag_id)
    REFERENCES public.tags (id) MATCH SIMPLE
                         ON UPDATE CASCADE
                         ON DELETE CASCADE
    )

    TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.resource_tag
    OWNER to postgres;

ALTER TABLE IF EXISTS public.resource_tag
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.resource_tag TO anon;

GRANT ALL ON TABLE public.resource_tag TO authenticated;

GRANT ALL ON TABLE public.resource_tag TO postgres;

GRANT ALL ON TABLE public.resource_tag TO service_role;


